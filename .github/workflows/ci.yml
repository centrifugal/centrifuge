name: build
on: [push, pull_request]
jobs:
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    # Prevent duplicate builds on internal PRs.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5
          args: --timeout 3m0s --verbose
  build:
    name: Test with Go ${{ matrix.go-version }} Redis ${{ matrix.redis-version }}
    runs-on: ubuntu-latest
    # Prevent duplicate builds on internal PRs.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      matrix:
        go-version: ["1.24", "1.25"]
        redis-version: [6, 7]
    steps:
      - name: Install Go stable version
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Start redis
        env:
          REDIS_VERSION: ${{ matrix.redis-version }}
        run: docker compose up -d --wait

      - name: Test
        run: go test -v -race -tags integration -coverprofile=coverage.out $(go list ./... | grep -v /_examples/)

      - name: Upload code coverage to codecov
        if: matrix.go-version == '1.25' && matrix.redis-version == 7
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
