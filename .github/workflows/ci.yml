name: build
on: [push, pull_request]
jobs:
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    # Prevent duplicate builds on internal PRs.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61.0
          args: --timeout 3m0s --verbose
  build:
    name: Test with Go ${{ matrix.go-version }} Redis ${{ matrix.redis-version }}
    runs-on: ubuntu-latest
    # Prevent duplicate builds on internal PRs.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      matrix:
        go-version: ["1.24"]
        redis-version: [7]
    steps:
      - name: Install Go stable version
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start redis
        env:
          REDIS_VERSION: ${{ matrix.redis-version }}
        run: docker compose up -d --wait

      - name: Test
        env:
          GODEBUG: fips140=on
        run: go test -v -race -tags integration -coverprofile=coverage.out $(go list ./... | grep -v /_examples/)
