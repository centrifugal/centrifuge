// Code generated by compiling proto template. DO NOT EDIT.
// protoc --proto_path=$GOPATH/src:$GOPATH/src/github.com/centrifugal/centrifuge/vendor:. --gogofaster_out=plugins=grpc:. api.proto
// python3 -m grpc_tools.protoc --proto_path $GOPATH/src:$GOPATH/src/github.com/centrifugal/centrifuge/vendor:. --python_out=. --grpc_python_out=. api.proto
syntax = "proto3";

package apiproto;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.equal_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;

message ClientInfo {
    string user = 1 [(gogoproto.jsontag) = "user"];
    string client = 2 [(gogoproto.jsontag) = "client"];
    bytes conn_info = 3 [(gogoproto.customtype) = "github.com/centrifugal/centrifuge/internal/proto.Raw", (gogoproto.jsontag) = "conn_info,omitempty", (gogoproto.nullable) = false];
    bytes chan_info = 4 [(gogoproto.customtype) = "github.com/centrifugal/centrifuge/internal/proto.Raw", (gogoproto.jsontag) = "chan_info,omitempty", (gogoproto.nullable) = false];
}

message Publication {
    string uid = 1 [(gogoproto.customname) = "UID", (gogoproto.jsontag) = "uid,omitempty"];
    bytes data = 2 [(gogoproto.customtype) = "github.com/centrifugal/centrifuge/internal/proto.Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
    ClientInfo info = 3 [(gogoproto.jsontag) = "info,omitempty"];
}

message Error {
    uint32 code = 1 [(gogoproto.jsontag) = "code"];
    string message = 2 [(gogoproto.jsontag) = "message"];
}

enum MethodType {
    
    option (gogoproto.goproto_enum_prefix) = false;
    
    PUBLISH = 0 [(gogoproto.enumvalue_customname) = "MethodTypePublish"];
    BROADCAST = 1 [(gogoproto.enumvalue_customname) = "MethodTypeBroadcast"];
    UNSUBSCRIBE = 2 [(gogoproto.enumvalue_customname) = "MethodTypeUnsubscribe"];
    DISCONNECT = 3 [(gogoproto.enumvalue_customname) = "MethodTypeDisconnect"];
    PRESENCE = 4 [(gogoproto.enumvalue_customname) = "MethodTypePresence"];
    PRESENCE_STATS = 5 [(gogoproto.enumvalue_customname) = "MethodTypePresenceStats"];
    HISTORY = 6 [(gogoproto.enumvalue_customname) = "MethodTypeHistory"];
    HISTORY_REMOVE = 7 [(gogoproto.enumvalue_customname) = "MethodTypeHistoryRemove"];
    CHANNELS = 8 [(gogoproto.enumvalue_customname) = "MethodTypeChannels"];
    INFO = 9 [(gogoproto.enumvalue_customname) = "MethodTypeInfo"];
}

message Command {
    uint32 id = 1 [(gogoproto.customname) = "ID", (gogoproto.jsontag) = "id"];
    MethodType method = 2 [(gogoproto.jsontag) = "method"];
    bytes params = 3 [(gogoproto.customtype) = "github.com/centrifugal/centrifuge/internal/proto.Raw", (gogoproto.jsontag) = "params", (gogoproto.nullable) = false];
}

message Reply {
    uint32 id = 1 [(gogoproto.customname) = "ID", (gogoproto.jsontag) = "id,omitempty"];
    Error error = 2 [(gogoproto.jsontag) = "error,omitempty"];
    bytes result = 3 [(gogoproto.customtype) = "github.com/centrifugal/centrifuge/internal/proto.Raw", (gogoproto.jsontag) = "result,omitempty", (gogoproto.nullable) = false];
}

message PublishRequest {
    string channel = 1 [(gogoproto.jsontag) = "channel"];
    bytes data = 2 [(gogoproto.customtype) = "github.com/centrifugal/centrifuge/internal/proto.Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
    string uid = 3 [(gogoproto.customname) = "UID", (gogoproto.jsontag) = "uid"];
}

message PublishResponse {
    Error error = 1 [(gogoproto.jsontag) = "error,omitempty"];
    PublishResult result = 2 [(gogoproto.jsontag) = "result,omitempty"];
}

message PublishResult {}

message BroadcastRequest {
    repeated string channels = 1 [(gogoproto.jsontag) = "channels"];
    bytes data = 2 [(gogoproto.customtype) = "github.com/centrifugal/centrifuge/internal/proto.Raw", (gogoproto.jsontag) = "data", (gogoproto.nullable) = false];
    string uid = 3 [(gogoproto.customname) = "UID", (gogoproto.jsontag) = "uid"];
}

message BroadcastResponse {
    Error error = 1 [(gogoproto.jsontag) = "error,omitempty"];
    BroadcastResult result = 2 [(gogoproto.jsontag) = "result,omitempty"];
}

message BroadcastResult {}

message UnsubscribeRequest {
    string channel = 1 [(gogoproto.jsontag) = "channel"];
    string user = 2 [(gogoproto.jsontag) = "user"];
}

message UnsubscribeResponse {
    Error error = 1 [(gogoproto.jsontag) = "error,omitempty"];
    UnsubscribeResult result = 2 [(gogoproto.jsontag) = "result,omitempty"];
}

message UnsubscribeResult {}

message DisconnectRequest {
    string user = 1 [(gogoproto.jsontag) = "user"];
}

message DisconnectResponse {
    Error error = 1 [(gogoproto.jsontag) = "error,omitempty"];
    DisconnectResult result = 2 [(gogoproto.jsontag) = "result,omitempty"];
}

message DisconnectResult {}

message PresenceRequest {
    string channel = 1 [(gogoproto.jsontag) = "channel"];
}

message PresenceResponse {
    Error error = 1 [(gogoproto.jsontag) = "error,omitempty"];
    PresenceResult result = 2 [(gogoproto.jsontag) = "result,omitempty"];
}

message PresenceResult {
    map<string, ClientInfo> presence = 1 [(gogoproto.jsontag) = "presence"];
}

message PresenceStatsRequest {
    string channel = 1 [(gogoproto.jsontag) = "channel"];
}

message PresenceStatsResponse {
    Error error = 1 [(gogoproto.jsontag) = "error,omitempty"];
    PresenceStatsResult result = 2 [(gogoproto.jsontag) = "result,omitempty"];
}

message PresenceStatsResult {
    uint32 num_clients = 1 [(gogoproto.jsontag) = "num_clients"];
    uint32 num_users = 2 [(gogoproto.jsontag) = "num_users"];
}

message HistoryRequest {
    string channel = 1 [(gogoproto.jsontag) = "channel"];
}

message HistoryResponse {
    Error error = 1 [(gogoproto.jsontag) = "error,omitempty"];
    HistoryResult result = 2 [(gogoproto.jsontag) = "result,omitempty"];
}

message HistoryResult {
    repeated Publication publications = 1 [(gogoproto.jsontag) = "publications", (gogoproto.nullable) = true];
}

message HistoryRemoveRequest {
    string channel = 1 [(gogoproto.jsontag) = "channel"];
}

message HistoryRemoveResponse {
    Error error = 1 [(gogoproto.jsontag) = "error,omitempty"];
    HistoryRemoveResult result = 2 [(gogoproto.jsontag) = "result,omitempty"];
}

message HistoryRemoveResult {}

message ChannelsRequest {}

message ChannelsResponse {
    Error error = 1 [(gogoproto.jsontag) = "error,omitempty"];
    ChannelsResult result = 2 [(gogoproto.jsontag) = "result,omitempty"];
}

message ChannelsResult {
    repeated string channels = 1 [(gogoproto.jsontag) = "channels"];
}

message InfoRequest {}

message InfoResponse {
    Error error = 1 [(gogoproto.jsontag) = "error,omitempty"];
    InfoResult result = 2 [(gogoproto.jsontag) = "result,omitempty"];
}

message InfoResult {
    string engine = 1 [(gogoproto.jsontag) = "engine"];
    repeated NodeResult nodes = 2 [(gogoproto.jsontag) = "nodes"];
}

message NodeResult {
    string uid = 1 [(gogoproto.customname) = "UID", (gogoproto.jsontag) = "uid"];
    string name = 2 [(gogoproto.jsontag) = "name"];
    string version = 3 [(gogoproto.jsontag) = "version"];
    uint32 num_clients = 4 [(gogoproto.jsontag) = "num_clients"];
    uint32 num_users = 5 [(gogoproto.jsontag) = "num_users"];
    uint32 num_channels = 6 [(gogoproto.jsontag) = "num_channels"];
    uint32 uptime = 7 [(gogoproto.jsontag) = "uptime"];
}

service Centrifuge {
    rpc Publish (PublishRequest) returns (PublishResponse) {}
    rpc Broadcast (BroadcastRequest) returns (BroadcastResponse) {}
    rpc Unsubscribe (UnsubscribeRequest) returns (UnsubscribeResponse) {}
    rpc Disconnect (DisconnectRequest) returns (DisconnectResponse) {}
    rpc Presence (PresenceRequest) returns (PresenceResponse) {}
    rpc PresenceStats (PresenceStatsRequest) returns (PresenceStatsResponse) {}
    rpc History (HistoryRequest) returns (HistoryResponse) {}
    rpc HistoryRemove (HistoryRemoveRequest) returns (HistoryRemoveResponse) {}
    rpc Channels (ChannelsRequest) returns (ChannelsResponse) {}
    rpc Info (InfoRequest) returns (InfoResponse) {}
}
